package edu.unifil.lab.view;

import edu.unifil.lab.controller.VisitanteJpaController;
import edu.unifil.lab.controller.exceptions.NonexistentEntityException;
import edu.unifil.lab.entity.Visitante;
import edu.unifil.lab.view.table.VisitanteTableModel;
import java.text.ParseException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.JOptionPane;
import javax.swing.text.MaskFormatter;

public class VisitanteInternalFrame extends javax.swing.JInternalFrame {
    
    // Set some attributes
    private VisitanteTableModel    visitanteTableModel;
    private VisitanteJpaController visitanteJpaController;
    private List<Visitante>        visitantes;
    private Visitante              auxVisitante;
    private MaskFormatter          telefoneFormatter;
            
    /**
     * Creates new form UsuarioInternalFrame
     */
    public VisitanteInternalFrame() {
        // Create format mask for the phone field
        try {
             telefoneFormatter = new MaskFormatter("(##)####-####");             
        } catch (ParseException ex) {
            Logger.getLogger(VisitanteInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        initComponents();
        
        auxVisitante        = new Visitante();
        visitanteTableModel = new VisitanteTableModel();
        tableVisitanteInternalFrame.setModel(visitanteTableModel);
        
        setTitle("Visitante");              
        changeEnable(true);     
        
        EntityManagerFactory factory = Persistence.createEntityManagerFactory("ReservaHotelPU");
        visitanteJpaController       = new VisitanteJpaController(factory);
        visitantes                   = visitanteJpaController.findVisitanteEntities();
        
        txtNome.grabFocus(); 
               
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        txtID = new javax.swing.JTextField();
        btnNew = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableVisitanteInternalFrame = new javax.swing.JTable();
        btnUpdate = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtTelefone = new javax.swing.JFormattedTextField(telefoneFormatter);
        txtEmail = new javax.swing.JTextField();

        setClosable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jLabel1.setText("ID:");

        jLabel2.setText("Nome:");

        txtID.setEditable(false);
        txtID.setFocusable(false);

        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/unifil/lab/images/add1.jpg"))); // NOI18N
        btnNew.setText("Novo");
        btnNew.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnNewMousePressed(evt);
            }
        });

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/unifil/lab/images/delete.jpg"))); // NOI18N
        btnDelete.setText("Remover");
        btnDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnDeleteMousePressed(evt);
            }
        });

        tableVisitanteInternalFrame.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableVisitanteInternalFrame.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tableVisitanteInternalFrameMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tableVisitanteInternalFrame);

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/unifil/lab/images/update.jpg"))); // NOI18N
        btnUpdate.setText("Atualizar");
        btnUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnUpdateMousePressed(evt);
            }
        });

        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/unifil/lab/images/save.jpg"))); // NOI18N
        btnAdd.setText("Inserir");
        btnAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnAddMousePressed(evt);
            }
        });

        jLabel3.setText("Telefone:");

        jLabel4.setText("Email:");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jScrollPane1)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                        .add(jLabel3)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                        .add(txtTelefone, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 180, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(jLabel4)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                        .add(txtEmail))
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                        .add(jLabel1)
                                        .add(48, 48, 48)
                                        .add(txtID, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(18, 18, 18)
                                        .add(jLabel2)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                        .add(txtNome, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 391, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                .add(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .add(layout.createSequentialGroup()
                        .add(btnNew, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnAdd, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(12, 12, 12)
                        .add(btnUpdate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnDelete, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(0, 8, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(14, 14, 14)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(jLabel2)
                    .add(txtNome, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(txtID, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(jLabel4)
                    .add(txtTelefone, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(txtEmail, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnNew)
                    .add(btnAdd)
                    .add(btnDelete)
                    .add(btnUpdate))
                .add(23, 23, 23)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void changeEnable(boolean status){
        btnAdd.setEnabled(status);
        btnDelete.setEnabled(!status);
        btnUpdate.setEnabled(!status);
    }
            
    private void cleanTxtFields(){
        txtID.setText("");
        txtNome.setText("");
        txtTelefone.setText("");
        txtEmail.setText("");
    }
    
    private void btnNewMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNewMousePressed
        cleanTxtFields();
        if(!btnAdd.isEnabled()){
            changeEnable(true);
        }
        txtNome.grabFocus();
        tableVisitanteInternalFrame.clearSelection();
        
    }//GEN-LAST:event_btnNewMousePressed

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        setVisible(false);
    }//GEN-LAST:event_formInternalFrameClosed

    private void tableVisitanteInternalFrameMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableVisitanteInternalFrameMousePressed
        
        // Check if the selected row is bigger then zero : to continue
        if( tableVisitanteInternalFrame.getSelectedRow() >= -1 ){            
            // Verify if the add button is enable : to continue
            if(btnAdd.isEnabled()){
                // Change the button status
                changeEnable(!btnAdd.isEnabled());             
            }
            // Recovery the clicked visitant listed
            auxVisitante = (Visitante) visitanteTableModel.getValueAt(tableVisitanteInternalFrame.getSelectedRow(), 4);
            // Set the recovered user attributes to the form fields
            txtID.setText(String.valueOf(auxVisitante.getIdVisitante()));
            txtNome.setText(auxVisitante.getNome());   
            txtTelefone.setText(auxVisitante.getTelefone());
            txtEmail.setText(auxVisitante.getEmail());
        }        

    }//GEN-LAST:event_tableVisitanteInternalFrameMousePressed

    private void btnDeleteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMousePressed
        // Check if delete button is enable : to continue
        if(btnDelete.isEnabled()){
            // Check if the form fields isn't empty and user id : to continue
            auxVisitante = (Visitante) visitanteTableModel.getValueAt(tableVisitanteInternalFrame.getSelectedRow(), 4);
            if( !( txtNome.getText().trim().isEmpty() && txtEmail.getText().trim().isEmpty() &&
                    txtTelefone.getText().trim().isEmpty() && (auxVisitante.getIdVisitante()< 0) ) ){                                
                try {
                    visitanteJpaController.destroy(auxVisitante.getIdVisitante());
                    JOptionPane.showMessageDialog(rootPane, "Visitante removido!", "", JOptionPane.INFORMATION_MESSAGE);
                    visitanteTableModel.fireTableDataChanged();
                    tableVisitanteInternalFrame.setModel(visitanteTableModel);
                    tableVisitanteInternalFrame.repaint();
                    tableVisitanteInternalFrame.revalidate();
                    tableVisitanteInternalFrame.scrollRectToVisible(tableVisitanteInternalFrame.getCellRect(tableVisitanteInternalFrame.getRowCount()-1, 0, true));
                    tableVisitanteInternalFrame.clearSelection();
                    cleanTxtFields();
                    changeEnable(btnDelete.isEnabled());
                    txtNome.grabFocus();
                } catch (NonexistentEntityException ex) {
                    Logger.getLogger(UsuarioInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(rootPane, "Erro ao remover visitante!", "", JOptionPane.ERROR_MESSAGE);
                }
            }else{
                JOptionPane.showMessageDialog(rootPane, "Preencher os campos!", "", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnDeleteMousePressed

    private void btnUpdateMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMousePressed
        // Check if update button is enable : to continue
        if(btnUpdate.isEnabled()){
            // Check if the form fields isn't empty and user id : to continue
            auxVisitante = (Visitante) visitanteTableModel.getValueAt(tableVisitanteInternalFrame.getSelectedRow(), 4);
            if( !( txtNome.getText().trim().isEmpty() && txtEmail.getText().trim().isEmpty() &&
                    txtTelefone.getText().trim().isEmpty() && (auxVisitante.getIdVisitante()< 0) ) ){                                
                
                auxVisitante.setNome(txtNome.getText().trim());
                auxVisitante.setEmail(txtEmail.getText().trim());
                auxVisitante.setTelefone(txtTelefone.getText().trim());
                    
                try {
                    visitanteJpaController.edit(auxVisitante);
                    JOptionPane.showMessageDialog(rootPane, "Visitante atualizado!", "", JOptionPane.INFORMATION_MESSAGE);
                    visitanteTableModel.fireTableDataChanged();
                    tableVisitanteInternalFrame.setModel(visitanteTableModel);
                    tableVisitanteInternalFrame.repaint();
                    tableVisitanteInternalFrame.revalidate();
                    tableVisitanteInternalFrame.scrollRectToVisible(tableVisitanteInternalFrame.getCellRect(tableVisitanteInternalFrame.getRowCount()-1, 0, true));
                    tableVisitanteInternalFrame.clearSelection();
                    cleanTxtFields();
                    changeEnable(btnDelete.isEnabled());
                    txtNome.grabFocus();
                } catch (NonexistentEntityException ex) {
                    Logger.getLogger(UsuarioInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(rootPane, "Erro ao atualizar visitante!", "", JOptionPane.ERROR_MESSAGE);
                } catch (Exception ex) {
                    Logger.getLogger(VisitanteInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else{
                JOptionPane.showMessageDialog(rootPane, "Preencher os campos!", "", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnUpdateMousePressed

    private void btnAddMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddMousePressed
        // Check if add button is enable : to continue
        if(btnAdd.isEnabled()){
            // Check if the form fields isn't empty : to continue
            if( !( txtNome.getText().trim().isEmpty() && txtEmail.getText().trim().isEmpty() &&
                    txtTelefone.getText().trim().isEmpty() ) ){                                
                
                Visitante visitante = new Visitante();
                visitante.setNome(txtNome.getText().trim());
                visitante.setEmail(txtEmail.getText().trim());
                visitante.setTelefone(txtTelefone.getText().trim());
                    
                try {
                    visitanteJpaController.create(visitante);
                    JOptionPane.showMessageDialog(rootPane, "Visitante inserido!", "", JOptionPane.INFORMATION_MESSAGE);
                    visitanteTableModel.fireTableDataChanged();
                    tableVisitanteInternalFrame.setModel(visitanteTableModel);
                    tableVisitanteInternalFrame.repaint();
                    tableVisitanteInternalFrame.revalidate();
                    tableVisitanteInternalFrame.scrollRectToVisible(tableVisitanteInternalFrame.getCellRect(tableVisitanteInternalFrame.getRowCount()-1, 0, true));
                    tableVisitanteInternalFrame.clearSelection();
                    cleanTxtFields();
                    changeEnable(btnDelete.isEnabled());
                    txtNome.grabFocus();
                } catch (Exception ex) {
                    Logger.getLogger(VisitanteInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(rootPane, "Erro ao criar visitante!", "", JOptionPane.ERROR_MESSAGE);
                }
            }else{
                JOptionPane.showMessageDialog(rootPane, "Preencher os campos!", "", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnAddMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableVisitanteInternalFrame;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtTelefone;
    // End of variables declaration//GEN-END:variables
}
