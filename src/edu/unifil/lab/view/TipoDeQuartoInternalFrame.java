package edu.unifil.lab.view;

import edu.unifil.lab.controller.TipoQuartoJpaController;
import edu.unifil.lab.entity.TipoQuarto;
import edu.unifil.lab.view.table.TipoQuartoTableModel;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.JOptionPane;

public class TipoDeQuartoInternalFrame extends javax.swing.JInternalFrame {
    
    // Set some attributes
    private TipoQuartoTableModel    tipoQuartoTableModel; 
    private TipoQuartoJpaController tipoQuartoJpaController;
    private List<TipoQuarto>        tipoQuartos;
    private TipoQuarto              auxTipoDeQuarto;
    
    /**
     * Creates new form UsuarioInternalFrame
     */
    public TipoDeQuartoInternalFrame() {
        initComponents();
        
        auxTipoDeQuarto      = new TipoQuarto();
        tipoQuartoTableModel = new TipoQuartoTableModel();
        tableTipoQuartoInternalFrame.setModel(tipoQuartoTableModel);
        
        setTitle("Tipo de Quarto");              
        changeEnable(true);
        
        EntityManagerFactory factory = Persistence.createEntityManagerFactory("ReservaHotelPU");
        tipoQuartoJpaController      = new TipoQuartoJpaController(factory);
        tipoQuartos                  = tipoQuartoJpaController.findTipoQuartoEntities();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtDescricao = new javax.swing.JTextField();
        txtID = new javax.swing.JTextField();
        btnNew = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableTipoQuartoInternalFrame = new javax.swing.JTable();
        btnUpdate = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();

        setClosable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jLabel1.setText("ID:");

        jLabel2.setText("Descrição:");

        txtID.setEditable(false);

        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/unifil/lab/images/add1.jpg"))); // NOI18N
        btnNew.setText("Novo");
        btnNew.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnNewMousePressed(evt);
            }
        });

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/unifil/lab/images/delete.jpg"))); // NOI18N
        btnDelete.setText("Remover");
        btnDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnDeleteMousePressed(evt);
            }
        });

        tableTipoQuartoInternalFrame.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableTipoQuartoInternalFrame.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tableTipoQuartoInternalFrameMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tableTipoQuartoInternalFrame);

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/unifil/lab/images/update.jpg"))); // NOI18N
        btnUpdate.setText("Atualizar");
        btnUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnUpdateMousePressed(evt);
            }
        });

        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/unifil/lab/images/save.jpg"))); // NOI18N
        btnAdd.setText("Inserir");
        btnAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnAddMousePressed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 286, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(layout.createSequentialGroup()
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(jLabel2)
                                .add(jLabel1))
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                .add(txtDescricao, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                .add(txtID)))
                        .add(layout.createSequentialGroup()
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                .add(btnNew, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(btnUpdate, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE))
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                .add(btnAdd, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(btnDelete, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)))))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(14, 14, 14)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(txtID, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(txtDescricao, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnNew)
                    .add(btnAdd))
                .add(1, 1, 1)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnUpdate)
                    .add(btnDelete))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void changeEnable(boolean status){
        btnAdd.setEnabled(status);
        btnDelete.setEnabled(!status);
        btnUpdate.setEnabled(!status);
    }
            
    private void cleanTxtFields(){
        txtID.setText("");
        txtDescricao.setText("");
    }
    
    private void btnNewMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNewMousePressed
        cleanTxtFields();
        if(!btnAdd.isEnabled()){
            changeEnable(true);
        }
        
    }//GEN-LAST:event_btnNewMousePressed

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        setVisible(false);
    }//GEN-LAST:event_formInternalFrameClosed

    private void tableTipoQuartoInternalFrameMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableTipoQuartoInternalFrameMousePressed
        // Check if the selected row is bigger then zero : to continue
        if(tableTipoQuartoInternalFrame.getSelectedRow() >= -1){
            // Verify if the add button is enable : to continue
            if(btnAdd.isEnabled()){
                // Change the button status
                changeEnable(!btnAdd.isEnabled());
            }
            // Recovery the clicked tipo quarto listed
            auxTipoDeQuarto = (TipoQuarto) tipoQuartoTableModel.getValueAt(tableTipoQuartoInternalFrame.getSelectedRow(), 2);
            // Set the recovered tipo quarto attributes to the form fields
            txtID.setText(String.valueOf(auxTipoDeQuarto.getIdTipo()));
            txtDescricao.setText(auxTipoDeQuarto.getDescricao());
        }        

    }//GEN-LAST:event_tableTipoQuartoInternalFrameMousePressed

    private void btnDeleteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMousePressed
        // Check if delete button is enable : to continue
        if(btnDelete.isEnabled()){
           // Check if the form fields isn't empty and table type id : to continue
           auxTipoDeQuarto = (TipoQuarto) tipoQuartoTableModel.getValueAt( tableTipoQuartoInternalFrame.getSelectedRow(), 2);
           if(!(txtDescricao.getText().trim().isEmpty() && (auxTipoDeQuarto.getIdTipo() < 0))){
                
                auxTipoDeQuarto.setIdTipo( Integer.parseInt( txtID.getText().trim() ) );
                auxTipoDeQuarto.setDescricao( txtDescricao.getText().trim() );
                
                try {
                    tipoQuartoJpaController.destroy(auxTipoDeQuarto.getIdTipo());
                    JOptionPane.showMessageDialog(rootPane, "Tipo de quarto removido!", "", JOptionPane.INFORMATION_MESSAGE);
                    tipoQuartoTableModel.fireTableDataChanged();
                    tableTipoQuartoInternalFrame.setModel(tipoQuartoTableModel);
                    tableTipoQuartoInternalFrame.repaint();
                    tableTipoQuartoInternalFrame.revalidate();
                    tableTipoQuartoInternalFrame.scrollRectToVisible(
                            tableTipoQuartoInternalFrame.getCellRect(
                                tableTipoQuartoInternalFrame.getRowCount()-1,0,true));
                    tableTipoQuartoInternalFrame.clearSelection();
                    cleanTxtFields();
                    changeEnable(btnAdd.isEnabled());
                    txtDescricao.grabFocus();  
                } catch (Exception ex) {
                    Logger.getLogger(UsuarioInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(rootPane, "Erro ao remover tipo do quarto!", "", JOptionPane.ERROR_MESSAGE);
                }
            }else{
                JOptionPane.showMessageDialog(rootPane, "Preencher os campos!", "", JOptionPane.WARNING_MESSAGE);
            }
        }
        
    }//GEN-LAST:event_btnDeleteMousePressed

    private void btnUpdateMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMousePressed
       // Check if update button is enable : to continue
        if(btnUpdate.isEnabled()){
           // Check if the form fields isn't empty and table type id : to continue
           auxTipoDeQuarto = (TipoQuarto) tipoQuartoTableModel.getValueAt( tableTipoQuartoInternalFrame.getSelectedRow(), 2);
           if(!(txtDescricao.getText().trim().isEmpty() && (auxTipoDeQuarto.getIdTipo() < 0))){
                
                auxTipoDeQuarto.setIdTipo( Integer.parseInt( txtID.getText().trim() ) );
                auxTipoDeQuarto.setDescricao( txtDescricao.getText().trim() );
                
                try {
                    tipoQuartoJpaController.edit(auxTipoDeQuarto);
                    JOptionPane.showMessageDialog(rootPane, "Tipo de quarto atualizado!", "", JOptionPane.INFORMATION_MESSAGE);
                    tipoQuartoTableModel.fireTableDataChanged();
                    tableTipoQuartoInternalFrame.setModel(tipoQuartoTableModel);
                    tableTipoQuartoInternalFrame.repaint();
                    tableTipoQuartoInternalFrame.revalidate();
                    tableTipoQuartoInternalFrame.scrollRectToVisible(
                            tableTipoQuartoInternalFrame.getCellRect(
                                tableTipoQuartoInternalFrame.getRowCount()-1,0,true));
                    tableTipoQuartoInternalFrame.clearSelection();
                    cleanTxtFields();
                    changeEnable(btnAdd.isEnabled());
                    txtDescricao.grabFocus();  
                } catch (Exception ex) {
                    Logger.getLogger(UsuarioInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(rootPane, "Erro ao atualizar o tipo do quarto!", "", JOptionPane.ERROR_MESSAGE);
                }
            }else{
                JOptionPane.showMessageDialog(rootPane, "Preencher os campos!", "", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnUpdateMousePressed

    private void btnAddMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddMousePressed
        // Check if add button is enable : to continue
        if(btnAdd.isEnabled()){
            // Check if the form fields isn't empty : to continue
            if(!txtDescricao.getText().trim().isEmpty()){
            
                TipoQuarto tipoQuarto = new TipoQuarto();
                tipoQuarto.setDescricao(txtDescricao.getText().trim());
                try {
                    tipoQuartoJpaController.create(tipoQuarto);
                    JOptionPane.showMessageDialog(rootPane, "Tipo de quarto inserido!", "", JOptionPane.INFORMATION_MESSAGE);
                    tipoQuartoTableModel.fireTableDataChanged();
                    tableTipoQuartoInternalFrame.setModel(tipoQuartoTableModel);
                    tableTipoQuartoInternalFrame.repaint();
                    tableTipoQuartoInternalFrame.revalidate();
                    tableTipoQuartoInternalFrame.scrollRectToVisible(
                            tableTipoQuartoInternalFrame.getCellRect(
                                tableTipoQuartoInternalFrame.getRowCount()-1,0,true));
                    tableTipoQuartoInternalFrame.clearSelection();
                    cleanTxtFields();
                    changeEnable(btnAdd.isEnabled());
                    txtDescricao.grabFocus();  
                } catch (Exception ex) {
                    Logger.getLogger(UsuarioInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(rootPane, "Erro ao criar tipo do quarto!", "", JOptionPane.ERROR_MESSAGE);
                }
            }else{
                JOptionPane.showMessageDialog(rootPane, "Preencher os campos!", "", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnAddMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableTipoQuartoInternalFrame;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JTextField txtID;
    // End of variables declaration//GEN-END:variables
}
