package edu.unifil.lab.view;

import edu.unifil.lab.controller.QuartoJpaController;
import edu.unifil.lab.controller.TipoQuartoJpaController;
import edu.unifil.lab.entity.Quarto;
import edu.unifil.lab.entity.TipoQuarto;
import edu.unifil.lab.view.combobox.TipoQuartoComboBoxModel;
import edu.unifil.lab.view.table.QuartoTableModel;
import edu.unifil.lab.view.table.TipoQuartoTableModel;
import java.util.List;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;

/**
 *
 * @author mhadaniya
 */
public class QuartoInternalFrame1 extends javax.swing.JInternalFrame {
    
    // Set some attributes
    private QuartoTableModel        quartoTableModel;
    private QuartoJpaController     quartoJpaController;
    private List<Quarto>            quartos;
    private Quarto                  auxQuarto;
    private TipoQuartoTableModel    tipoQuartoTableModel;
    private TipoQuartoJpaController tipoQuartoJpaController;
    private List<TipoQuarto>        tipoQuartos;
    private TipoQuarto              auxTipoQuarto;
    
    /**
     * Creates new form UsuarioInternalFrame
     */
    public QuartoInternalFrame1() {
        initComponents();

        auxQuarto        = new Quarto();
        quartoTableModel = new QuartoTableModel();
        tableQuartoInternalFrame.setModel(quartoTableModel);
        
        setTitle("Quarto");
        changeEnable(true);
        
        EntityManagerFactory factory = Persistence.createEntityManagerFactory("ReservaHotelPU");
        quartoJpaController          = new QuartoJpaController(factory);
        quartos                      = quartoJpaController.findQuartoEntities();
        
        tipoQuartoComboBox.setModel(new TipoQuartoComboBoxModel());
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtDescricao = new javax.swing.JTextField();
        txtID = new javax.swing.JTextField();
        btnNew = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableQuartoInternalFrame = new javax.swing.JTable();
        btnUpdate = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tipoQuartoComboBox = new javax.swing.JComboBox();
        capacidadeComboBox = new javax.swing.JComboBox();

        setClosable(true);
        setMinimumSize(new java.awt.Dimension(614, 303));
        setPreferredSize(new java.awt.Dimension(614, 303));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jLabel1.setText("ID:");

        jLabel2.setText("Descrição:");

        txtID.setEditable(false);

        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/unifil/lab/images/add1.jpg"))); // NOI18N
        btnNew.setText("Novo");
        btnNew.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnNewMousePressed(evt);
            }
        });

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/unifil/lab/images/delete.jpg"))); // NOI18N
        btnDelete.setText("Remover");
        btnDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnDeleteMousePressed(evt);
            }
        });

        tableQuartoInternalFrame.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tableQuartoInternalFrame.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tableQuartoInternalFrameMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tableQuartoInternalFrame);

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/unifil/lab/images/update.jpg"))); // NOI18N
        btnUpdate.setText("Atualizar");
        btnUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnUpdateMousePressed(evt);
            }
        });

        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/unifil/lab/images/save.jpg"))); // NOI18N
        btnAdd.setText("Inserir");
        btnAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnAddMousePressed(evt);
            }
        });

        jLabel3.setText("Capacidade:");

        jLabel4.setText("Tipo de Quarto:");

        capacidadeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(layout.createSequentialGroup()
                                .add(jLabel1)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(txtID, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(42, 42, 42)
                                .add(jLabel3)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(capacidadeComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(btnNew, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(btnUpdate, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(btnAdd, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(btnDelete, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)))
                            .add(layout.createSequentialGroup()
                                .add(jLabel4)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(tipoQuartoComboBox, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .add(layout.createSequentialGroup()
                                .add(jLabel2)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(txtDescricao)))
                        .add(0, 0, Short.MAX_VALUE))
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 578, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(14, 14, 14)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(txtID, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel3)
                    .add(capacidadeComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(txtDescricao, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(tipoQuartoComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnNew)
                    .add(btnAdd))
                .add(1, 1, 1)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnUpdate)
                    .add(btnDelete))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 146, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void changeEnable(boolean status){
        btnAdd.setEnabled(status);
        btnDelete.setEnabled(!status);
        btnUpdate.setEnabled(!status);
    }
            
    private void cleanTxtFields(){
        txtID.setText("");
        txtDescricao.setText("");
        tipoQuartoComboBox.setSelectedIndex(0);
        capacidadeComboBox.setSelectedIndex(0);
        tipoQuartoComboBox.repaint();
    }
    
    private void btnNewMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNewMousePressed
        cleanTxtFields();
        if(!btnAdd.isEnabled()){
            changeEnable(true);
        }
        
    }//GEN-LAST:event_btnNewMousePressed

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        setVisible(false);
    }//GEN-LAST:event_formInternalFrameClosed

    private void tableQuartoInternalFrameMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableQuartoInternalFrameMousePressed
        // Check if the selected row is bigger then zero : to continue
        if(tableQuartoInternalFrame.getSelectedRow() >= -1){            
            if( btnAdd.isEnabled() ){
                changeEnable(!btnAdd.isEnabled());                
            }
            
            auxQuarto = (Quarto) quartoTableModel.getValueAt(tableQuartoInternalFrame.getSelectedRow(), 99);
            txtID.setText(String.valueOf(auxQuarto.getIdQuarto()));
            txtDescricao.setText(auxQuarto.getDescricaoQuarto());
            tipoQuartoComboBox.repaint();
            tipoQuartoComboBox.revalidate();
            // Define the capacit
            capacidadeComboBox.setSelectedIndex(auxQuarto.getCapacidade() - 1);
//            tipoQuartoComboBox.setSelectedIndex(auxQuarto.getTipo());
//            // Define room kind
//            for(int i = 0; i < tipoQuartoComboBox.getItemCount(); i++){
//                if (tipoQuartoComboBox.getItemAt(i).equals(auxQuarto.getTipo().getDescricao())){
//                    tipoQuartoComboBox.setSelectedIndex(i);
//                }
//            }
        }        

    }//GEN-LAST:event_tableQuartoInternalFrameMousePressed

    private void btnDeleteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMousePressed
//        if(btnDelete.isEnabled()){
////            auxUsuario.setIdUsuario(Integer.parseInt(usuarioTableModel.getValueAt(jTable1.getSelectedRow(), 2).toString()));
//            auxQuarto = (Quarto) quartoTableModel.getValueAt(tableQuartoInternalFrame.getSelectedRow(), 99);
//            if(!(txtID.getText().isEmpty() && (auxQuarto.getIdQuarto()< 0))){                                
//                if (daoQuarto.remover(auxQuarto)){
//                    JOptionPane.showMessageDialog(rootPane, "Quarto removido!", "", JOptionPane.INFORMATION_MESSAGE);
//                    quartoTableModel.fireTableDataChanged();
//                    tableQuartoInternalFrame.repaint();
//                    tableQuartoInternalFrame.scrollRectToVisible(tableQuartoInternalFrame.getCellRect(tableQuartoInternalFrame.getRowCount()-1, 0, true));
//                    tableQuartoInternalFrame.clearSelection();
//                    cleanTxtFields();
//                    changeEnable(true);
//                    txtDescricao.grabFocus();
//                }else{
//                    JOptionPane.showMessageDialog(rootPane, "Erro ao remover Quarto!", "", JOptionPane.ERROR_MESSAGE);
//                }
//            }else{
//                JOptionPane.showMessageDialog(rootPane, "Campo login não informado!", "", JOptionPane.WARNING_MESSAGE);
//            }
//        }  
        
    }//GEN-LAST:event_btnDeleteMousePressed

    private void btnUpdateMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMousePressed
//        if(btnUpdate.isEnabled()){
//            if(!(txtID.getText().isEmpty() && (auxQuarto.getIdQuarto()< 0))){
//
////                auxUsuario.setIdUsuario(Integer.parseInt(usuarioTableModel.getValueAt(jTable1.getSelectedRow(), 2).toString()));
//                auxQuarto = (Quarto) quartoTableModel.getValueAt(tableQuartoInternalFrame.getSelectedRow(), 99);                
//                auxQuarto.setDescricaoQuarto(txtDescricao.getText());
//                auxQuarto.setTipoQuarto((TipoQuarto) tipoQuartoComboBox.getSelectedItem());
//                auxQuarto.setCapacidade(Integer.parseInt(capacidadeComboBox.getSelectedItem().toString()));
//                if (daoQuarto.atualizar(auxQuarto)){
//                    System.out.println(auxQuarto);
//                    JOptionPane.showMessageDialog(rootPane, "Quarto atualizado!", "", JOptionPane.INFORMATION_MESSAGE);
//                    quartoTableModel.fireTableDataChanged();
//                    tableQuartoInternalFrame.repaint();
//                    tableQuartoInternalFrame.scrollRectToVisible(tableQuartoInternalFrame.getCellRect(tableQuartoInternalFrame.getSelectedRow(), 0, true));
//                    tableQuartoInternalFrame.clearSelection();
//                    cleanTxtFields(); 
//                    changeEnable(true);
//                    txtDescricao.grabFocus();                  
//                }else{
//                    JOptionPane.showMessageDialog(rootPane, "Erro ao atualizar Quarto!", "", JOptionPane.ERROR_MESSAGE);
//                }
//            }else{
//                JOptionPane.showMessageDialog(rootPane, "Campo login não informado!", "", JOptionPane.WARNING_MESSAGE);
//            }
//        }
    }//GEN-LAST:event_btnUpdateMousePressed

    private void btnAddMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddMousePressed
//        if(btnAdd.isEnabled()){
//            if(!(txtDescricao.getText().isEmpty())){
//                Quarto quarto = new Quarto(txtDescricao.getText(), (TipoQuarto) tipoQuartoComboBox.getSelectedItem(), Integer.parseInt(capacidadeComboBox.getSelectedItem().toString()));
//                if (daoQuarto.inserir(quarto)){
//                    JOptionPane.showMessageDialog(rootPane, "Quarto inserido!", "", JOptionPane.INFORMATION_MESSAGE);
//                    quartoTableModel.fireTableDataChanged();
//                    tableQuartoInternalFrame.repaint();
//                    tableQuartoInternalFrame.scrollRectToVisible(tableQuartoInternalFrame.getCellRect(tableQuartoInternalFrame.getRowCount()-1, 0, true));
//                    tableQuartoInternalFrame.clearSelection();
//                    cleanTxtFields();
//                    changeEnable(true);
//                    txtDescricao.grabFocus();
//                }else{
//                    JOptionPane.showMessageDialog(rootPane, "Erro ao inserir Quarto!", "", JOptionPane.ERROR_MESSAGE);
//                }
//            }else{
//                JOptionPane.showMessageDialog(rootPane, "Preencher os campos!", "", JOptionPane.WARNING_MESSAGE);
//            }
//        }
    }//GEN-LAST:event_btnAddMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox capacidadeComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableQuartoInternalFrame;
    private javax.swing.JComboBox tipoQuartoComboBox;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JTextField txtID;
    // End of variables declaration//GEN-END:variables
}
