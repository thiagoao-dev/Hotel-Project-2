package edu.unifil.lab.view;

import edu.unifil.lab.controller.ReservaJpaController;
import edu.unifil.lab.controller.exceptions.NonexistentEntityException;
import edu.unifil.lab.entity.Quarto;
import edu.unifil.lab.entity.Reserva;
import edu.unifil.lab.entity.Visitante;
import edu.unifil.lab.view.combobox.QuartoComboBoxModel;
import edu.unifil.lab.view.combobox.VisitanteComboBoxModel;
import edu.unifil.lab.view.table.ReservaTableModel;
import java.awt.HeadlessException;
import java.text.ParseException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.JOptionPane;
import javax.swing.text.MaskFormatter;

public class ReservaInternalFrame extends javax.swing.JInternalFrame {
    
    // Set some attributes
    private ReservaTableModel    reservaTableModel;
    private EntityManagerFactory factory;
    private ReservaJpaController reservaJpaController;  
    private Reserva              auxReserva;
    private MaskFormatter        telefoneFormatter;
    
    /**
     * Creates new form UsuarioInternalFrame
     */
    public ReservaInternalFrame() {
        
        // Defines the phone number format field
        try {
             telefoneFormatter = new MaskFormatter("(##)####-####");             
        } catch (ParseException ex) {
            Logger.getLogger(ReservaInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        initComponents();
        setTitle("Reserva");              
        changeEnable(true);    
        
        
        auxReserva                   = new Reserva();
        EntityManagerFactory factory = Persistence.createEntityManagerFactory("ReservaHotelPU");
        reservaJpaController         = new ReservaJpaController(factory);
        reservaTableModel            = new ReservaTableModel();
        tableReservaInternalFrame.setModel(reservaTableModel);
        
        // Fill all combobox
        quartoComboBox.setModel(new QuartoComboBoxModel());
        visitanteComboBox.setModel(new VisitanteComboBoxModel());
        
        // Set the minimum selected date
        dataEntrada.setMinSelectableDate(new Date());
        dataSaida.setMinSelectableDate(new Date());
        dataEntrada.setDate(new Date());
        
        // Focus de pointer into the field
        dataEntrada.grabFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        btnNew = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableReservaInternalFrame = new javax.swing.JTable();
        btnUpdate = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        dataEntrada = new com.toedter.calendar.JDateChooser();
        dataSaida = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        visitanteComboBox = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        quartoComboBox = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        txtPagamento = new javax.swing.JTextField();
        statusCheckBox = new javax.swing.JCheckBox();

        setClosable(true);
        setPreferredSize(new java.awt.Dimension(650, 420));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jLabel1.setText("ID:");

        jLabel2.setText("Data entrada:");

        txtID.setEditable(false);

        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/unifil/lab/images/add1.jpg"))); // NOI18N
        btnNew.setText("Novo");
        btnNew.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnNewMousePressed(evt);
            }
        });

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/unifil/lab/images/delete.jpg"))); // NOI18N
        btnDelete.setText("Remover");
        btnDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnDeleteMousePressed(evt);
            }
        });

        tableReservaInternalFrame.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableReservaInternalFrame.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tableReservaInternalFrameMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tableReservaInternalFrame);

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/unifil/lab/images/update.jpg"))); // NOI18N
        btnUpdate.setText("Atualizar");
        btnUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnUpdateMousePressed(evt);
            }
        });

        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/unifil/lab/images/save.jpg"))); // NOI18N
        btnAdd.setText("Inserir");
        btnAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnAddMousePressed(evt);
            }
        });

        jLabel3.setText("Quarto:");

        dataEntrada.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dataEntradaPropertyChange(evt);
            }
        });

        jLabel5.setText("Data sa√≠da:");

        visitanteComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel6.setText("Visitante:");

        quartoComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel7.setText("Pagamento:");

        statusCheckBox.setText("Status");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(6, 6, 6)
                        .add(btnNew, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnAdd, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(12, 12, 12)
                        .add(btnUpdate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnDelete, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(34, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane1)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                .add(jLabel6)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(visitanteComboBox, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(layout.createSequentialGroup()
                                        .add(quartoComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 160, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                        .add(jLabel7)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                        .add(txtPagamento, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 146, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(18, 18, 18)
                                        .add(statusCheckBox)
                                        .add(0, 0, Short.MAX_VALUE))))
                            .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                        .add(jLabel1)
                                        .add(48, 48, 48)
                                        .add(txtID, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(28, 28, 28)
                                        .add(jLabel2)
                                        .add(12, 12, 12)
                                        .add(dataEntrada, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(18, 18, 18)
                                        .add(jLabel5)
                                        .add(18, 18, 18)
                                        .add(dataSaida, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel3))
                                .add(0, 0, Short.MAX_VALUE)))
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(14, 14, 14)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.CENTER)
                    .add(jLabel5)
                    .add(dataSaida, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(dataEntrada, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel2)
                    .add(txtID, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel1))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(visitanteComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel6))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 45, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(quartoComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel7)
                    .add(txtPagamento, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(statusCheckBox))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnNew)
                    .add(btnAdd)
                    .add(btnUpdate)
                    .add(btnDelete))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 191, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void changeEnable(boolean status){
        btnAdd.setEnabled(status);
        btnDelete.setEnabled(!status);
        btnUpdate.setEnabled(!status);
    }
            
    private void cleanTxtFields(){
        txtID.setText("");
        txtPagamento.setText("");
        dataEntrada.setEnabled(true);
        dataSaida.setDate(new Date());
        dataEntrada.setDate(new Date());
        visitanteComboBox.setSelectedIndex(0);
        quartoComboBox.setSelectedIndex(0);
        statusCheckBox.setSelected(false);
    }
    
    private void btnNewMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNewMousePressed
        cleanTxtFields();
        if(!btnAdd.isEnabled()){
            changeEnable(true);
        }
        dataEntrada.grabFocus();
        tableReservaInternalFrame.clearSelection();        
    }//GEN-LAST:event_btnNewMousePressed

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        setVisible(false);
    }//GEN-LAST:event_formInternalFrameClosed

    private void tableReservaInternalFrameMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableReservaInternalFrameMousePressed
        
        if(tableReservaInternalFrame.getSelectedRow() >= 0){            
            if(btnAdd.isEnabled()){
                changeEnable(!btnAdd.isEnabled());
                dataEntrada.setEnabled(false);
            }
            auxReserva = (Reserva) reservaTableModel.getValueAt(tableReservaInternalFrame.getSelectedRow(), 99);
            txtID.setText(String.valueOf(auxReserva.getCodReserva()));
            txtPagamento.setText(String.valueOf(auxReserva.getPagamento()));
            dataEntrada.setDate(auxReserva.getDataEntrada());
            dataSaida.setDate(auxReserva.getDataSaida());
            
            visitanteComboBox.getModel().setSelectedItem(auxReserva.getIdVisitante());
            quartoComboBox.getModel().setSelectedItem(auxReserva.getIdQuarto());
            visitanteComboBox.repaint();
            quartoComboBox.repaint();
        }

    }//GEN-LAST:event_tableReservaInternalFrameMousePressed

    private void btnDeleteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMousePressed
       
        if(btnDelete.isEnabled()){
            auxReserva = (Reserva) reservaTableModel.getValueAt(tableReservaInternalFrame.getSelectedRow(), 99);
            if(!(txtID.getText().isEmpty() && (auxReserva.getCodReserva()< 0))){                                
                try {
                reservaJpaController.destroy(auxReserva.getCodReserva());  
                JOptionPane.showMessageDialog(rootPane, "Reserva removida!", "", JOptionPane.INFORMATION_MESSAGE);
                reservaTableModel.fireTableDataChanged();
                tableReservaInternalFrame.repaint();
                tableReservaInternalFrame.revalidate();
                tableReservaInternalFrame.scrollRectToVisible(tableReservaInternalFrame.getCellRect(tableReservaInternalFrame.getRowCount()-1, 0, true));
                tableReservaInternalFrame.clearSelection();
                cleanTxtFields();
                changeEnable(true);
                dataEntrada.grabFocus();
                } catch (NonexistentEntityException | HeadlessException e) {
                    JOptionPane.showMessageDialog(rootPane, "Erro ao remover reserva!", "", JOptionPane.ERROR_MESSAGE);
                }                
            }else{
                JOptionPane.showMessageDialog(rootPane, "Preencher os campos!", "", JOptionPane.WARNING_MESSAGE);
            }
        }
        
    }//GEN-LAST:event_btnDeleteMousePressed

    private void btnUpdateMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMousePressed
        if(btnUpdate.isEnabled()){
            if(!(txtID.getText().isEmpty() && (auxReserva.getCodReserva()< 0))){

                auxReserva = (Reserva) reservaTableModel.getValueAt(tableReservaInternalFrame.getSelectedRow(), 99);
                auxReserva.setCodReserva(Integer.parseInt(txtID.getText()));
                auxReserva.setIdVisitante((Visitante) visitanteComboBox.getModel().getSelectedItem());
                auxReserva.setIdQuarto((Quarto) quartoComboBox.getModel().getSelectedItem());
                auxReserva.setPagamento(Double.parseDouble(txtPagamento.getText()));
                auxReserva.setStatus(statusCheckBox.isSelected());
                auxReserva.setDataSaida( dataSaida.getDate() );
                
                try {
                    reservaJpaController.edit(auxReserva); 
                    System.out.println(auxReserva);
                    JOptionPane.showMessageDialog(rootPane, "Reserva atualizada!", "", JOptionPane.INFORMATION_MESSAGE);
                    reservaTableModel.fireTableDataChanged();
                    tableReservaInternalFrame.repaint();
                    tableReservaInternalFrame.revalidate();
                    tableReservaInternalFrame.scrollRectToVisible(tableReservaInternalFrame.getCellRect(tableReservaInternalFrame.getSelectedRow(), 0, true));
                    tableReservaInternalFrame.clearSelection();
                    cleanTxtFields(); 
                    changeEnable(true);
                    dataEntrada.grabFocus(); 

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(rootPane, "Erro ao atualizar reserva!", "", JOptionPane.ERROR_MESSAGE);
                }             
            }else{
                JOptionPane.showMessageDialog(rootPane, "Preencher os campos!", "", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnUpdateMousePressed

    private void btnAddMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddMousePressed
        
        if(btnAdd.isEnabled()){
           
            if(!(txtPagamento.getText().isEmpty() || dataEntrada.getCalendar().toString().isEmpty())){             
                
                Reserva reserva = new Reserva();
                reserva.setIdVisitante((Visitante) visitanteComboBox.getSelectedItem());
                reserva.setIdQuarto((Quarto) quartoComboBox.getSelectedItem());
                reserva.setDataEntrada(dataEntrada.getDate());
                reserva.setDataSaida(dataSaida.getDate());
                reserva.setPagamento(Double.parseDouble(txtPagamento.getText()));
                reserva.setStatus(statusCheckBox.isSelected());
                
                try {
                    reservaJpaController.create(reserva);
                    reservaTableModel.fireTableDataChanged();
                    tableReservaInternalFrame.repaint();
                    tableReservaInternalFrame.revalidate();
                    tableReservaInternalFrame.scrollRectToVisible(tableReservaInternalFrame.getCellRect(tableReservaInternalFrame.getRowCount()-1, 0, true));
                    tableReservaInternalFrame.clearSelection();
                    cleanTxtFields();
                    changeEnable(true);
                    dataEntrada.grabFocus();

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(rootPane, "Erro ao inserir reserva!", "", JOptionPane.ERROR_MESSAGE);    
                }    
            }else{
                JOptionPane.showMessageDialog(rootPane, "Preencher os campos!", "", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnAddMousePressed

    private void dataEntradaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dataEntradaPropertyChange
        // TODO add your handling code here:
        dataSaida.setMinSelectableDate(dataEntrada.getDate());
        dataSaida.setDate(dataEntrada.getDate());
    }//GEN-LAST:event_dataEntradaPropertyChange


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnUpdate;
    private com.toedter.calendar.JDateChooser dataEntrada;
    private com.toedter.calendar.JDateChooser dataSaida;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox quartoComboBox;
    private javax.swing.JCheckBox statusCheckBox;
    private javax.swing.JTable tableReservaInternalFrame;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtPagamento;
    private javax.swing.JComboBox visitanteComboBox;
    // End of variables declaration//GEN-END:variables
}
